{"version":3,"sources":["../../js/mobile.js"],"names":["useLoc","document","getElementById","checked","localStorage","onchange","navBtn","querySelector","onclick","disabled","location","href","navigator","innerText","geolocation","getCurrentPosition","p","coords","latitude","longitude","err","alert","message","enableHighAccuracy","timeout","maximumAge","updateTimes","remains","querySelectorAll","i","length","element","now","Date","getTime","secondsPassed","Math","floor","pageLoaded","alivefor","getAttribute","remain","min","sec","setInterval","forEach","listItem","window"],"mappings":";;AAAA,IAAIA,SAASC,SAASC,cAAT,CAAwB,SAAxB,CAAb;AACAF,OAAOG,OAAP,GAAiBC,aAAaJ,MAAb,KAAwB,MAAzC;AACAA,OAAOK,QAAP,GAAkB,YAAY;AAC1BD,iBAAaJ,MAAb,GAAsBA,OAAOG,OAA7B;AACH,CAFD;;AAIA,IAAIG,SAASL,SAASM,aAAT,CAAuB,aAAvB,CAAb;AACAD,OAAOE,OAAP,GAAiB,YAAY;AACzB,QAAIJ,aAAaJ,MAAb,KAAwB,MAA5B,EAAoC;AAChCM,eAAOG,QAAP,GAAkB,IAAlB;AACA,eAAQC,SAASC,IAAT,GAAgB,QAAxB;AACH,KAHD,MAGO,IAAI,iBAAiBC,SAArB,EAAgC;AACnC;AACAN,eAAOG,QAAP,GAAkB,IAAlB;AACAH,eAAOO,SAAP,GAAmB,aAAnB;;AAEA;AACAD,kBAAUE,WAAV,CAAsBC,kBAAtB,CAAyC,UAAUC,CAAV,EAAa;AAClDV,mBAAOO,SAAP,GAAmB,cAAnB;AACAH,qBAASC,IAAT,GAAgB,gBAAgBK,EAAEC,MAAF,CAASC,QAAzB,GAAoC,OAApC,GAA8CF,EAAEC,MAAF,CAASE,SAAvE;AACH,SAHD,EAGG,UAAUC,GAAV,EAAe;AACdd,mBAAOO,SAAP,GAAmB,QAAnB;AACAP,mBAAOG,QAAP,GAAkB,KAAlB;AACAY,kBAAM,6BAA6BD,IAAIE,OAAvC;AACH,SAPD,EAOG;AACCC,gCAAoB,IADrB;AAECC,qBAAS,IAFV;AAGCC,wBAAY;AAHb,SAPH;AAYH,KAlBM,MAkBA;AACHJ,cAAM,8CAAN;AACH;AACJ,CAzBD;;AA2BA,SAASK,WAAT,GAAuB;AACnB;AACA;AACA;AACA;AACA;AACA,QAAIC,UAAU1B,SAAS2B,gBAAT,CAA0B,YAA1B,CAAd;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,QAAQG,MAA5B,EAAoC,EAAED,CAAtC,EAAyC;AACrC,YAAIE,UAAUJ,QAAQE,CAAR,CAAd;AACA,YAAIG,MAAM,IAAIC,IAAJ,GAAWC,OAAX,EAAV;AACA,YAAIC,gBAAgBC,KAAKC,KAAL,CAAW,CAACL,MAAMM,UAAP,IAAqB,IAAhC,CAApB;AACA,YAAIC,WAAWR,QAAQS,YAAR,CAAqB,WAArB,CAAf;AACA,YAAIC,SAASF,WAAWJ,aAAxB;AACA,YAAIO,MAAMN,KAAKC,KAAL,CAAWI,SAAS,EAApB,CAAV;AACA,YAAIE,MAAMF,SAAS,EAAnB;AACAV,gBAAQlB,SAAR,GAAqB4B,SAAS,CAAV,GAAeC,MAAM,OAAN,GAAgBC,GAAhB,GAAsB,MAArC,GAA8C,WAAlE;AACH;AACJ;AACDC,YAAYlB,WAAZ,EAAyB,IAAzB;;AAEAzB,SAAS2B,gBAAT,CAA0B,IAA1B,EAAgCiB,OAAhC,CAAwC,UAAUC,QAAV,EAAoB;AACxDA,aAAStC,OAAT,GAAmB,YAAY;AAC3BuC,eAAO9C,QAAP,CAAgBS,QAAhB,GAA2B,KAAK8B,YAAL,CAAkB,MAAlB,CAA3B;AACH,KAFD;AAGH,CAJD","file":"mobile.built.js","sourcesContent":["var useLoc = document.getElementById('use-loc')\r\nuseLoc.checked = localStorage.useLoc === 'true'\r\nuseLoc.onchange = function () {\r\n    localStorage.useLoc = useLoc.checked\r\n}\r\n\r\nvar navBtn = document.querySelector('#nav button')\r\nnavBtn.onclick = function () {\r\n    if (localStorage.useLoc !== 'true') {\r\n        navBtn.disabled = true\r\n        return (location.href = 'mobile')\r\n    } else if ('geolocation' in navigator) {\r\n        // Getting the GPS position can be very slow on some devices\r\n        navBtn.disabled = true\r\n        navBtn.innerText = 'Locating...'\r\n\r\n        // Get location and use it!\r\n        navigator.geolocation.getCurrentPosition(function (p) {\r\n            navBtn.innerText = 'Reloading...'\r\n            location.href = 'mobile?lat=' + p.coords.latitude + '&lon=' + p.coords.longitude\r\n        }, function (err) {\r\n            navBtn.innerText = 'Reload'\r\n            navBtn.disabled = false\r\n            alert('Failed to get location: ' + err.message)\r\n        }, {\r\n            enableHighAccuracy: true,\r\n            timeout: 5000,\r\n            maximumAge: 5000\r\n        })\r\n    } else {\r\n        alert('Your device does not support web geolocation')\r\n    }\r\n}\r\n\r\nfunction updateTimes() {\r\n    // server tells us how many seconds are left we note the\r\n    // pageload time and count down from there.\r\n    // Yes, this could be a smidge innaccurate, but not by\r\n    // more than 1 second or so which doesn't matter.\r\n    // And now we don't have to deal with timestamps and dates!\r\n    var remains = document.querySelectorAll('div.remain')\r\n    for (var i = 0; i < remains.length; ++i) {\r\n        var element = remains[i]\r\n        var now = new Date().getTime()\r\n        var secondsPassed = Math.floor((now - pageLoaded) / 1000)\r\n        var alivefor = element.getAttribute('disappear')\r\n        var remain = alivefor - secondsPassed\r\n        var min = Math.floor(remain / 60)\r\n        var sec = remain % 60\r\n        element.innerText = (remain > 0) ? min + ' min ' + sec + ' sec' : '(expired)'\r\n    }\r\n}\r\nsetInterval(updateTimes, 1000)\r\n\r\ndocument.querySelectorAll('li').forEach(function (listItem) {\r\n    listItem.onclick = function () {\r\n        window.document.location = this.getAttribute('href')\r\n    }\r\n})\r\n"]}